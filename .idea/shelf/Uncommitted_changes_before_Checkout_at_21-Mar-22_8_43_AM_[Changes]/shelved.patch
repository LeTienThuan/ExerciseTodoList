Index: src/Component/Customer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst Customer = (props) => {\r\n\r\n\r\n    return (\r\n        <h1>\r\n            Customer\r\n        </h1>\r\n    )\r\n}\r\nexport default Customer
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Component/Customer.js b/src/Component/Customer.js
--- a/src/Component/Customer.js	(revision 2a05b0038cff5c79ff9a41502e1ea33a45a34adb)
+++ b/src/Component/Customer.js	(date 1647826964900)
@@ -1,13 +1,108 @@
-import React from 'react';
+import React, {useState} from 'react';
 import 'antd/dist/antd.css';
+import '../CSS/EditableTable.css'
+import {Button, Space, Table} from "antd";
+import {DeleteOutlined, EditOutlined} from "@ant-design/icons";
+import {listCustomer} from "../DefaultValue/DefaultValue";
+import ModalCustomer from "./ModalCustomer";
+
+
+const Customer = () => {
+    const columns = [
+        {
+            title: 'Name',
+            dataIndex: 'name',
+            key: 'name',
+        },
+        {
+            title: 'Age',
+            dataIndex: 'age',
+            key: 'age',
+        },
+        {
+            title: 'Address',
+            dataIndex: 'address',
+            key: 'address',
+        },
+        {
+            title: 'Action',
+            key: 'action',
+            render: (text, record) => (
+
+                <Space size="middle">
+                    <Button type='primary'
+                            icon={<EditOutlined/>}
+                            onClick={() => setModel({
+                                ...model,
+                                visible: true,
+                                customer: record,
+                                inform: 'Edit Successfully',
+                                title: 'Edit Customer'
+                            })}
+                    >
+                        Edit
+                    </Button>
+                    <Button type='primary'
+                            danger={true}
+                            icon={<DeleteOutlined/>}
+                            onClick={() => handleDeleteCustomer(record)}
+                    >
+                        Delete
+                    </Button>
+                </Space>
+            ),
+        },
+    ];
+
+    const [dataCustomer, setDataCustomer] = useState(listCustomer);
+    const [model, setModel] = useState({
+        visible: false,
+        customer: {},
+        inform:'',
+        title: '',
+        onCancel: () => {
+            setModel({...model, visible: false});
+        },
+    });
 
-const Customer = (props) => {
+    const onSaveData = (record) => {
+        const newData = [...dataCustomer];
+        newData.push(record);
+        setDataCustomer(newData);
+        setModel({...model, visible: false})
+    }
 
+    const onUpdateData = (record) => {
+        const index = dataCustomer.findIndex(data => data.key === record.key);
+        const newData = [...dataCustomer];
+        newData[index] = record;
+        setDataCustomer(newData);
+        setModel({...model, visible: false})
+    }
 
-    return (
-        <h1>
-            Customer
-        </h1>
-    )
-}
-export default Customer
\ No newline at end of file
+    const handleDeleteCustomer = (record) => {
+        const newCustomersList = dataCustomer.filter((customer) => {
+            return customer.key !== record.key;
+        });
+        setDataCustomer(newCustomersList);
+    }
+
+    return (<>
+        <Button type="primary"
+                style={{marginBottom: '20px'}}
+                onClick={() => setModel({...model,
+                                                visible: true,
+                                                title: 'Add New Customer',
+                                                inform: 'Add Successfully',})}
+        >
+            Add New Customer
+        </Button>
+        <ModalCustomer model={model}
+                       onSaveData={onSaveData} onUpdateData={onUpdateData}
+        />
+        <Table dataSource={dataCustomer}
+               columns={columns}/>
+    </>);
+};
+
+export default Customer;
\ No newline at end of file
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"todolist-exercise\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@ant-design/icons\": \"^4.7.0\",\r\n    \"@testing-library/jest-dom\": \"^5.16.2\",\r\n    \"@testing-library/react\": \"^12.1.4\",\r\n    \"@testing-library/user-event\": \"^13.5.0\",\r\n    \"antd\": \"^4.19.2\",\r\n    \"react\": \"^17.0.2\",\r\n    \"react-dom\": \"^17.0.2\",\r\n    \"react-router-dom\": \"^5.3.0\",\r\n    \"react-scripts\": \"5.0.0\",\r\n    \"web-vitals\": \"^2.1.4\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision 2a05b0038cff5c79ff9a41502e1ea33a45a34adb)
+++ b/package.json	(date 1647826964945)
@@ -8,8 +8,10 @@
     "@testing-library/react": "^12.1.4",
     "@testing-library/user-event": "^13.5.0",
     "antd": "^4.19.2",
+    "moment": "^2.29.1",
     "react": "^17.0.2",
     "react-dom": "^17.0.2",
+    "react-moment": "^1.1.1",
     "react-router-dom": "^5.3.0",
     "react-scripts": "5.0.0",
     "web-vitals": "^2.1.4"
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	(revision 2a05b0038cff5c79ff9a41502e1ea33a45a34adb)
+++ b/package-lock.json	(date 1647826965222)
@@ -13,8 +13,10 @@
         "@testing-library/react": "^12.1.4",
         "@testing-library/user-event": "^13.5.0",
         "antd": "^4.19.2",
+        "moment": "^2.29.1",
         "react": "^17.0.2",
         "react-dom": "^17.0.2",
+        "react-moment": "^1.1.1",
         "react-router-dom": "^5.3.0",
         "react-scripts": "5.0.0",
         "web-vitals": "^2.1.4"
@@ -13959,6 +13961,16 @@
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
       "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w=="
     },
+    "node_modules/react-moment": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/react-moment/-/react-moment-1.1.1.tgz",
+      "integrity": "sha512-WjwvxBSnmLMRcU33do0KixDB+9vP3e84eCse+rd+HNklAMNWyRgZTDEQlay/qK6lcXFPRuEIASJTpEt6pyK7Ww==",
+      "peerDependencies": {
+        "moment": "^2.29.0",
+        "prop-types": "^15.7.0",
+        "react": "^16.0 || ^17.0.0"
+      }
+    },
     "node_modules/react-refresh": {
       "version": "0.11.0",
       "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.11.0.tgz",
@@ -26843,6 +26855,12 @@
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz",
       "integrity": "sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w=="
     },
+    "react-moment": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/react-moment/-/react-moment-1.1.1.tgz",
+      "integrity": "sha512-WjwvxBSnmLMRcU33do0KixDB+9vP3e84eCse+rd+HNklAMNWyRgZTDEQlay/qK6lcXFPRuEIASJTpEt6pyK7Ww==",
+      "requires": {}
+    },
     "react-refresh": {
       "version": "0.11.0",
       "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.11.0.tgz",
Index: src/Component/Product.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Product = (props) =>{\r\n    return (<h2>\r\n        Product\r\n    </h2>)\r\n}\r\nexport default  Product
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Component/Product.js b/src/Component/Product.js
--- a/src/Component/Product.js	(revision 2a05b0038cff5c79ff9a41502e1ea33a45a34adb)
+++ b/src/Component/Product.js	(date 1647826964914)
@@ -1,6 +1,109 @@
-const Product = (props) =>{
-    return (<h2>
-        Product
-    </h2>)
+import {Button, Space, Table} from "antd";
+import {DeleteOutlined, EditOutlined} from "@ant-design/icons";
+import React, {useState} from "react";
+import {listProduct} from "../DefaultValue/DefaultValue";
+import ModalProduct from "./ModalProduct";
+
+const formatter = new Intl.NumberFormat('vi-VN', {
+    style: 'currency',
+    currency: 'VND',
+    minimumFractionDigits: 0
+})
+
+const Product = () => {
+    const columns = [
+        {
+            title: 'Name',
+            dataIndex: 'name',
+            key: 'name',
+        },
+        {
+            title: 'Trademark',
+            dataIndex: 'trademark',
+            key: 'trademark',
+        },
+        {
+            title: 'Expired Date',
+            dataIndex: 'expiredDate',
+            key: 'expiredDate'
+        },
+        {
+            title: 'Price',
+            dataIndex: 'price',
+            key: 'price',
+            render: price => {
+                return formatter.format(price);
+            }
+        },
+        {
+            title: 'Action',
+            key: 'action',
+            render: (text, record) => (
+
+                <Space size="middle">
+                    <Button type='primary'
+                            icon={<EditOutlined/>}
+                            onClick={() => setModel({
+                                ...model,
+                                visible: true,
+                                product: record,
+                                inform: 'Edit Successfully',
+                                title: 'Edit Customer'
+                            })}
+                    >
+                        Edit
+                    </Button>
+                    <Button type='primary'
+                            danger={true}
+                            icon={<DeleteOutlined/>}
+                    >
+                        Delete
+                    </Button>
+                </Space>
+            ),
+        },
+    ];
+
+    const [dataProduct, setDataProduct] = useState(listProduct);
+    const [model, setModel] = useState({
+        visible: false,
+        product: {},
+        inform: '',
+        title: '',
+        onCancel: () => {
+            setModel({...model, visible: false});
+        },
+    });
+    console.log(localStorage.getItem('dataProduct'))
+    const handleSaveData = (record) => {
+        const newData = [...dataProduct];
+        newData.push(record);
+        setDataProduct(newData);
+        setModel({...model, visible: false})
+    }
+
+    const handleUpdateData = (record) => {
+        const index = dataProduct.findIndex(data => data.key === record.key);
+        const newData = [...dataProduct];
+        newData[index] = record;
+        setDataProduct(newData);
+        setModel({...model, visible: false})
+    }
+
+    return (<>
+        <Button type="primary"
+                style={{marginBottom: '20px'}}
+                onClick={() => setModel({
+                    ...model,
+                    visible: true,
+                    title: 'Add New Product',
+                    inform: 'Add Successfully'
+                })}
+        >
+            Add New Product
+        </Button>
+        <ModalProduct model={model} onUpdateData={handleUpdateData} onSaveData={handleSaveData}/>
+        <Table dataSource={dataProduct} columns={columns}/>
+    </>)
 }
-export default  Product
\ No newline at end of file
+export default Product
\ No newline at end of file
Index: src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import HeaderWebsite from \"./Component/HeaderWebsite\";\r\nimport 'antd/dist/antd.css'\r\nimport {Layout} from \"antd\";\r\nimport SiderWebsite from \"./Component/SiderWebsite\";\r\nimport ContentWebsite from \"./Component/ContentWebsite\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Order from \"./Component/Order\";\r\nimport Product from \"./Component/Product\";\r\nimport EditableTable from \"./Component/EditableTable\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Layout>\r\n            <HeaderWebsite/>\r\n            <Layout>\r\n                <SiderWebsite/>\r\n                <ContentWebsite>\r\n                    <Switch>\r\n                        <Route  path='/' exact>\r\n                           <Redirect to={'/customer'}/>\r\n                        </Route>\r\n                        <Route  path='/customer'>\r\n                            <EditableTable/>\r\n                        </Route>\r\n                        <Route path='/order'>\r\n                            <Order/>\r\n                        </Route>\r\n                        <Route path='/product'>\r\n                            <Product/>\r\n                        </Route>\r\n                    </Switch>\r\n                </ContentWebsite>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n}\r\nexport default App;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.js b/src/App.js
--- a/src/App.js	(revision 2a05b0038cff5c79ff9a41502e1ea33a45a34adb)
+++ b/src/App.js	(date 1647826964861)
@@ -6,7 +6,7 @@
 import {Redirect, Route, Switch} from "react-router-dom";
 import Order from "./Component/Order";
 import Product from "./Component/Product";
-import EditableTable from "./Component/EditableTable";
+import Customer from "./Component/Customer";
 
 const App = () => {
     return (
@@ -20,7 +20,7 @@
                            <Redirect to={'/customer'}/>
                         </Route>
                         <Route  path='/customer'>
-                            <EditableTable/>
+                            <Customer/>
                         </Route>
                         <Route path='/order'>
                             <Order/>
Index: src/Component/EditableTable.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useState} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport '../CSS/EditableTable.css'\r\nimport {Button, Space, Table} from \"antd\";\r\nimport {DeleteOutlined, EditOutlined, UserAddOutlined} from \"@ant-design/icons\";\r\nimport {listCustomer} from \"../DefaultValue/DefaultValue\";\r\n\r\n\r\nconst EditableTable = () =>{\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            key: 'address',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <Button type='primary' icon={<EditOutlined/>}>Edit</Button>\r\n                    <Button type='primary'\r\n                            danger={true}\r\n                            icon={<DeleteOutlined />}\r\n                            onClick={() =>handleDeleteCustomer(record.key)}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const [dataCustomer, setDataCustomer] = useState(listCustomer);\r\n\r\n    const handleAddCustomer = () =>{\r\n        setDataCustomer([...dataCustomer,     {\r\n            key: Math.random().toFixed(3),\r\n            name: '',\r\n            age: 0,\r\n            address: '',\r\n        }])\r\n    }\r\n    const handleDeleteCustomer = (key) =>{\r\n        const newCustomersList = dataCustomer.filter((customer) =>{\r\n            return customer.key !== key;\r\n        });\r\n        setDataCustomer(newCustomersList);\r\n    }\r\n    return  <>\r\n                <Button type=\"primary\"\r\n                        icon={<UserAddOutlined />}\r\n                        style={{marginBottom: 20}}\r\n                        onClick={handleAddCustomer}>Add Customer</Button>\r\n                <Table dataSource={dataCustomer}\r\n                       columns={columns} />\r\n            </>;\r\n};\r\n\r\nexport default EditableTable;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Component/EditableTable.js b/src/Component/EditableTable.js
--- a/src/Component/EditableTable.js	(revision 2a05b0038cff5c79ff9a41502e1ea33a45a34adb)
+++ b/src/Component/EditableTable.js	(date 1647826964930)
@@ -46,9 +46,9 @@
     const handleAddCustomer = () =>{
         setDataCustomer([...dataCustomer,     {
             key: Math.random().toFixed(3),
-            name: '',
-            age: 0,
-            address: '',
+            name: 'Elton John',
+            age: 25,
+            address: '2rd Lombard Street',
         }])
     }
     const handleDeleteCustomer = (key) =>{
@@ -63,7 +63,8 @@
                         style={{marginBottom: 20}}
                         onClick={handleAddCustomer}>Add Customer</Button>
                 <Table dataSource={dataCustomer}
-                       columns={columns} />
+                       columns={columns}
+                       pagination={{pageSize:4}}/>
             </>;
 };
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ab581b9b-bd74-4450-af9e-1983c83a5c1e\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Component/EditableTable.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Component/EditableTable.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaScript File\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"26P4MhiyxYQERHdbhjOob2BDTf7\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\r\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\r\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\r\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\r\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\r\n    <property name=\"ts.external.directory.path\" value=\"$APPLICATION_HOME_DIR$/plugins/JavaScriptLanguage/jsLanguageServicesImpl/external\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"start\" type=\"js.build_tools.npm\" nameIsGenerated=\"true\">\r\n      <package-json value=\"$PROJECT_DIR$/package.json\" />\r\n      <command value=\"run\" />\r\n      <scripts>\r\n        <script value=\"start\" />\r\n      </scripts>\r\n      <node-interpreter value=\"project\" />\r\n      <envs />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ab581b9b-bd74-4450-af9e-1983c83a5c1e\" name=\"Changes\" comment=\"\" />\r\n      <created>1647311840867</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1647311840867</updated>\r\n      <workItem from=\"1647311842894\" duration=\"10000\" />\r\n      <workItem from=\"1647312092043\" duration=\"6625000\" />\r\n      <workItem from=\"1647328808478\" duration=\"10539000\" />\r\n      <workItem from=\"1647339833759\" duration=\"56000\" />\r\n      <workItem from=\"1647395270134\" duration=\"23983000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2a05b0038cff5c79ff9a41502e1ea33a45a34adb)
+++ b/.idea/workspace.xml	(date 1647826964889)
@@ -5,8 +5,15 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="ab581b9b-bd74-4450-af9e-1983c83a5c1e" name="Changes" comment="">
+      <change afterPath="$PROJECT_DIR$/src/Component/FormProduct.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Component/EditableTable.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/EditableTable.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Component/Customer.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Customer.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Component/ModalCustomer.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/ModalCustomer.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Component/ModalProduct.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/ModalProduct.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Component/Product.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/Component/Product.js" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/DefaultValue/DefaultValue.js" beforeDir="false" afterPath="$PROJECT_DIR$/src/DefaultValue/DefaultValue.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -23,6 +30,14 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="GitSEFilterConfiguration">
+    <file-type-list>
+      <filtered-out-file-type name="LOCAL_BRANCH" />
+      <filtered-out-file-type name="REMOTE_BRANCH" />
+      <filtered-out-file-type name="TAG" />
+      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
+    </file-type-list>
+  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -67,7 +82,9 @@
       <workItem from="1647312092043" duration="6625000" />
       <workItem from="1647328808478" duration="10539000" />
       <workItem from="1647339833759" duration="56000" />
-      <workItem from="1647395270134" duration="23983000" />
+      <workItem from="1647395270134" duration="24149000" />
+      <workItem from="1647481986005" duration="27425000" />
+      <workItem from="1647568021645" duration="23794000" />
     </task>
     <servers />
   </component>
Index: src/DefaultValue/DefaultValue.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {Button, Space} from \"antd\";\r\nimport {DeleteOutlined, EditOutlined} from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\nexport const listCustomer = [\r\n    {\r\n        key: '1',\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '2',\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        address: 'London No. 1 Lake Park',\r\n    },\r\n    {\r\n        key: '3',\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        address: 'Sidney No. 1 Lake Park',\r\n    },\r\n];
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DefaultValue/DefaultValue.js b/src/DefaultValue/DefaultValue.js
--- a/src/DefaultValue/DefaultValue.js	(revision 2a05b0038cff5c79ff9a41502e1ea33a45a34adb)
+++ b/src/DefaultValue/DefaultValue.js	(date 1647826965233)
@@ -1,24 +1,38 @@
-import {Button, Space} from "antd";
-import {DeleteOutlined, EditOutlined} from "@ant-design/icons";
-import React from "react";
 
 export const listCustomer = [
     {
-        key: '1',
+        key: 1,
         name: 'John Brown',
         age: 32,
         address: 'New York No. 1 Lake Park',
     },
     {
-        key: '2',
+        key: 2,
         name: 'Jim Green',
         age: 42,
         address: 'London No. 1 Lake Park',
     },
     {
-        key: '3',
+        key: 3,
         name: 'Joe Black',
         age: 32,
         address: 'Sidney No. 1 Lake Park',
     },
+];
+export const listProduct = [
+    {
+        key: 1,
+        name: 'UHT Milk 500ml',
+        trademark: 'TH true Milk',
+        expiredDate: '2022-09-12',
+        price: 37000
+    },
+    {
+        key: 2,
+        name: 'UHT Milk 500ml',
+        trademark: 'Dalat Milk',
+        expiredDate: '2023-02-05',
+        price: 34000
+    }
+
 ];
\ No newline at end of file
